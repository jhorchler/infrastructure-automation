<?xml version="1.0" encoding="UTF-8"?>
<profile xmlns="http://www.suse.com/1.0/yast2ns"
         xmlns:config="http://www.suse.com/1.0/configns">

    <!-- GENERAL SECTION ================================================== -->
    <general>

        <!--
            - do not ask for confirmation
            - force a final reboot without kexec
        -->
        <mode>
            <confirm config:type="boolean">false</confirm>
            <final_reboot config:type="boolean">true</final_reboot>
            <forceboot config:type="boolean">true</forceboot>
            <!--<second_stage config:type="boolean">false</second_stage>-->
        </mode>

        <!--
            - final OS should have multipathd enabled
        -->
        <storage>
            <start_multipath config:type="boolean">true</start_multipath>
        </storage>

    </general>

    <!-- BOOTLOADER SETTINGS ============================================== -->
    <bootloader>

        <!--
            - set I/O scheduler to noop for better performance
        -->
        <global>
            <append>elevator=noop</append>
        </global>

    </bootloader>

    <!-- PARTITIONING ===================================================== -->
    <partitioning config:type="list">

        <!-- PHYSICAL DISKS
            This box should use "imutable infrastructure". The first / system
            disk should only contain SWAP and software filesystems including
            ORACLE_HOME.
            All volatile filesystems like oradata and /var should go to one
            or more additional disks.
            /tmp should be a RAM disk.
        -->
        <drive>
            <device>/dev/sda</device>
            <use>all</use>
            <initialize config:type="boolean">true</initialize>
            <disklabel>gpt</disklabel>
            <partitions config:type="list">
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/boot/efi</mount>
                    <label>EFIBOOT</label>
                    <size>512M</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">vfat</filesystem>
                    <partition_id config:type="integer">259</partition_id>
                    <mountby config:type="symbol">label</mountby>
                </partition>
                <partition>
                    <create config:type="boolean">true</create>
                    <size>max</size>
                    <format config:type="boolean">false</format>
                    <partition_id config:type="integer">142</partition_id>
                    <lvm_group>system</lvm_group>
                </partition>
            </partitions>
        </drive>
        <drive>
            <device>/dev/sdb</device>
            <use>all</use>
            <initialize config:type="boolean">true</initialize>
            <disklabel>gpt</disklabel>
            <partitions config:type="list">
                <partition>
                    <create config:type="boolean">true</create>
                    <size>max</size>
                    <format config:type="boolean">false</format>
                    <partition_id config:type="integer">142</partition_id>
                    <lvm_group>data</lvm_group>
                </partition>
            </partitions>
        </drive>

        <!--
            - logical volumes that should be mounted READ-ONLY later on and SWAP
            - create
                - system/swapaa     => swap
                - system/slash      => /
                - system/opt        => /opt
                - system/optoracle  => /opt/oracle
                - system/optoraprod => /opt/oracle/product
        -->
        <drive>
            <device>/dev/system</device>
            <use>all</use>
            <initialize config:type="boolean">true</initialize>
            <type config:type="symbol">CT_LVM</type>
            <partitions config:type="list">
                <!-- swap -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>swap</mount>
                    <label>SWAPAA</label>
                    <size>16G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">swap</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>swapaa</lv_name>
                </partition>
                <!-- / -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/</mount>
                    <label>SLASHFS</label>
                    <size>20G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>slash</lv_name>
                </partition>
                <!-- /opt -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/opt</mount>
                    <label>OPTFS</label>
                    <size>8G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>opt</lv_name>
                </partition>
                <!-- /opt/oracle -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/opt/oracle</mount>
                    <label>OPTORACLEFS</label>
                    <size>4G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>optoracle</lv_name>
                </partition>
                <!-- /opt/oracle/product -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/opt/oracle/product</mount>
                    <label>OPTORAPRODFS</label>
                    <size>30G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>optoraprod</lv_name>
                </partition>
            </partitions>
        </drive>

        <!--
            - data logical volumes that should be mounted READ-WRITE later
            - create
                - data/home     => /home
                - data/root     => /root
                - data/usrlocal => /usr/local (as per FS standard should not be affected by OS patch/update and therefore should be separate)
                - data/orabase  => /opt/oracle/base
                - data/var      => /var
                - data/varlog   => /var/log (should use a log server to reduce content here)
                - data/vartmp   => /var/tmp (as per FS should remain after reboots and therefore needs to be stored on a disk)
                - data/varcrash => /var/crash
                - data/varcache => /var/cache
        -->
        <drive>
            <device>/dev/data</device>
            <use>all</use>
            <initialize config:type="boolean">true</initialize>
            <type config:type="symbol">CT_LVM</type>
            <partitions config:type="list">
                <!-- /home -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/home</mount>
                    <label>HOMEFS</label>
                    <size>4G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>home</lv_name>
                </partition>
                <!-- /root -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/root</mount>
                    <label>ROOTFS</label>
                    <size>4G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>root</lv_name>
                </partition>
                <!-- /usr/local -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/usr/local</mount>
                    <label>USRLOCALFS</label>
                    <size>4G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>usrlocal</lv_name>
                </partition>
                <!-- /opt/oracle/base -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/opt/oracle/base</mount>
                    <label>ORABASE</label>
                    <size>24G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>orabase</lv_name>
                </partition>
                <!-- /var -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/var</mount>
                    <label>VARFS</label>
                    <size>4G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>var</lv_name>
                </partition>
                <!-- /var/log -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/var/log</mount>
                    <label>VARLOGFS</label>
                    <size>8G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>varlog</lv_name>
                </partition>
                <!-- /var/tmp -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/var/tmp</mount>
                    <label>VARTMPFS</label>
                    <size>8G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>vartmp</lv_name>
                </partition>
                <!-- /var/crash -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/var/crash</mount>
                    <label>VARCRASHFS</label>
                    <size>2G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>varcrash</lv_name>
                </partition>
                <!-- /var/cache -->
                <partition>
                    <create config:type="boolean">true</create>
                    <mount>/var/cache</mount>
                    <label>VARCACHEFS</label>
                    <size>8G</size>
                    <format config:type="boolean">true</format>
                    <filesystem config:type="symbol">xfs</filesystem>
                    <mountby config:type="symbol">label</mountby>
                    <lv_name>varcache</lv_name>
                </partition>
            </partitions>
        </drive>

        <!-- /tmp as ramdisk -->
        <drive>
            <type config:type="symbol">CT_TMPFS</type>
            <partitions config:type="list">
                <partition>
                    <mount>/tmp</mount>
                    <fstopt>size=${tmpsize}</fstopt>
                </partition>
            </partitions>
        </drive>

    </partitioning>

    <!-- COUNTRY SETTINGS ================================================= -->
    <language>

        <!--
            - primary language is US english
            - install all languages
        -->
        <language>en_US</language>
        <languages>all</languages>

    </language>

    <timezone>

        <!--
            - HWClock runs in UTC
            - timezone is local
        -->
        <hwclock>UTC</hwclock>
        <timezone>Europe/Berlin</timezone>

    </timezone>

    <keyboard>

        <!--
            - set to US english as well
        -->
        <keymap>english-us</keymap>

    </keyboard>

    <!-- SOFTWARE ========================================================= -->
    <software>

        <!--
            - do not install recommended pattern
            - install default kernel
            - online update at the end
            - install minimum needed software
            - install some wanted packages
        -->
        <install_recommended config:type="boolean">false</install_recommended>
        <kernel>kernel-default</kernel>
        <do_online_update config:type="boolean">true</do_online_update>
        <patterns config:type="list">
            <pattern>base</pattern>
            <pattern>sw_management</pattern>
            <pattern>yast2_basis</pattern>
        </patterns>
        <packages config:type="list">
            <package>less</package>
            <package>dhcp</package>
            <package>dhcp-client</package>
            <package>sudo</package>
            <package>vim</package>
            <package>wget</package>
        </packages>

    </software>

    <!--
        - do not use image installation
    -->
    <deploy_image>
        <image_installation config:type="boolean">false</image_installation>
    </deploy_image>

    <!-- SERVICES AND SYSTEMD TARGETS ===================================== -->
    <services-manager>

        <!--
            - boot without GUI
        -->
        <default_target>multi-user</default_target>

    </services-manager>

    <!-- NETWORK =========================================================  -->
    <networking>

        <!--
            - first interface will use dhcp
              -> Default Switch does not provide DHCP. Hence, a external switch must be used.
        -->
        <interfaces config:type="list">
            <interface>
                <bootproto>dhcp</bootproto>
                <name>eth0</name>
                <startmode>auto</startmode>
            </interface>
        </interfaces>

        <!--
            - set hostname
            - do not request / use hostname from dhcp
            - do not write hostname to /etc/hosts
            - automatically handle /etc/resolv.conf
        -->
        <dns>
            <hostname>packer</hostname>
            <dhcp_hostname config:type="boolean">false</dhcp_hostname>
            <write_hostname config:type="boolean">false</write_hostname>
            <resolv_conf_policy>auto</resolv_conf_policy>
        </dns>

    </networking>

    <!-- NTP =============================================================  -->
    <ntp-client>
        <!--
            - sync with a german pool
        -->
        <ntp_policy>auto</ntp_policy>
        <ntp_servers config:type="list">
            <ntp_server>
                <address>de.pool.ntp.org</address>
                <iburst config:type="boolean">true</iburst>
            </ntp_server>
        </ntp_servers>
    </ntp-client>

    <!-- SECURITY SETTINGS ================================================ -->
    <security>

        <!--
            password settings
            - maximum number of days a password is valid
            - minimum number of days before a user can change the
              password since the last change
            - number of days when the password change reminder starts
            - use cracklib and no obscure checks
            - minimum length of password
            - maximum length of passwrd
            - password encryption in /etc/shadow
            - password history settings
        -->
        <pass_max_days>178</pass_max_days>
        <pass_min_days>3</pass_min_days>
        <pass_warn_age>7</pass_warn_age>
        <passwd_use_cracklib>yes</passwd_use_cracklib>
        <obscure_checks_enab>no</obscure_checks_enab>
        <pass_min_len>12</pass_min_len>
        <pass_max_len>64</pass_max_len>
        <passwd_encryption>sha512</passwd_encryption>
        <passwd_remember_history>5</passwd_remember_history>

        <!--
            login settings
            - Delay in seconds before being allowed another attempt after a login failure
            - log failed logins
            - disable lastlog
        -->
        <fail_delay>5</fail_delay>
        <faillog_enab>yes</faillog_enab>
        <lastlog_enab>no</lastlog_enab>

        <!--
            general settings
            - don't add . to the path of root and users
            - set filesystem permissions policy to secure
            - don't run updatedb as root (systemd default)
            - ensure postix doesn't listen on ips
        -->
        <cwd_in_root_path>no</cwd_in_root_path>
        <cwd_in_user_path>no</cwd_in_user_path>
        <permission_security>secure</permission_security>
        <run_updatedb_as>nobody</run_updatedb_as>
        <smtpd_listen_remote>no</smtpd_listen_remote>

    </security>

    <!-- AUDIT DAEMON ===================================================== -->
    <audit-laf>

        <!--
            - incrementally write audit to disk every 100 records
            - keep 8 files each 128 MB and rotate these files
            - include short hostname in the records
        -->
        <auditd>
            <flush>INCREMENTAL</flush>
            <freq>100</freq>
            <log_file>/var/log/audit/audit.log</log_file>
            <log_format>RAW</log_format>
            <max_log_file>128</max_log_file>
            <num_logs>8</num_logs>
            <max_log_file_action>ROTATE</max_log_file_action>
            <name_format>HOSTNAME</name_format>
        </auditd>

        <rules />

    </audit-laf>

    <!-- ROOT USER ======================================================== -->
    <users config:type="list">

        <!--
            root user
            - ensure it can not expire
        -->
        <user>
            <username>root</username>
            <home>/root</home>
            <uid>0</uid>
            <gid>0</gid>
            <user_password>${user_password}</user_password>
            <encrypted config:type="boolean">false</encrypted>
            <password_settings>
                <inact>-1</inact>
                <max>99999</max>
                <min>0</min>
            </password_settings>
        </user>
    </users>

    <!-- KDUMP ============================================================ -->
    <kdump>
        <!--
            - reserver memory size automatically
        -->
        <add_crash_kernel config:type="boolean">true</add_crash_kernel>
        <crash_kernel>256M-2G:64M,2G-:128M</crash_kernel>
        <general>

            <!--
                - save core and kernel in /var/crash locally
                - keep 2 dumps
                - do not save if less than 64 MB will remain after dump
            -->
            <KDUMP_SAVEDIR>file:///var/crash</KDUMP_SAVEDIR>
            <KDUMP_COPY_KERNEL>true</KDUMP_COPY_KERNEL>
            <KDUMP_KEEP_OLD_DUMPS>2</KDUMP_KEEP_OLD_DUMPS>
            <KDUMP_FREE_DISK_SIZE>64</KDUMP_FREE_DISK_SIZE>
            <!--


            -->
            <KDUMP_DUMPFORMAT>compressed</KDUMP_DUMPFORMAT>
            <KDUMP_DUMPLEVEL>9,31</KDUMP_DUMPLEVEL>
        </general>

    </kdump>

    <!-- SCRIPTS ========================================================== -->
    <scripts>

        <!--
            - disable SSHD during installation
        -->
        <chroot-scripts config:type="list">
            <script>
                <chrooted config:type="boolean">true</chrooted>
                <source>
                    <![CDATA[systemctl stop sshd.service; systemctl disable sshd.service]]>
                </source>
            </script>
        </chroot-scripts>

        <!--
            - enable SSHD after first boot
        -->
        <init-scripts config:type="list">
            <script>
                <source>
                    <![CDATA[systemctl enable sshd.service && systemctl start sshd.service]]>
                </source>
            </script>
        </init-scripts>

    </scripts>

</profile>

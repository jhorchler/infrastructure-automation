# version running locally
Vagrant.require_version ">=2.2.19"

# configs
config_version = "2"
libvirt_driver = "kvm"
libvirt_keymap = "en-us"
libvirt_nic_type = "virtio"
libvirt_machine_type = "q35"
windows_box = "win2019"
windows_username = "Administrator"
windows_uefi_firmware = "/usr/share/edk2-ovmf/x64/OVMF.fd"
linux_box = "centos8"
linux_username = "root"
dns_domain = "local.test"

# definitions
Vagrant.configure(config_version) do |config|

    # as local box is used no update check is needed
    config.vm.box_check_update = false

    # use libvirt provider
    config.vagrant.plugins = "vagrant-libvirt"
    config.vm.provider :libvirt do |lv|

        # set driver
        lv.driver = libvirt_driver

        # keymap
        lv.keymap = libvirt_keymap

        # virtio network driver installed in each box
        lv.nic_model_type = libvirt_nic_type

        # machine type used by packer was q35 - should used here / set above
        lv.machine_type = libvirt_machine_type

    end # config.vm.provider :libvirt

    # define machines
    # Microsoft Windows for
    # - ActiveDirectory
    config.vm.define :msad01 do |msad01|

        # we will use windows box as this first one is ActiveDirectory
        msad01.vm.box = windows_box

        # communicator settings
        # use WinRM
        msad01.vm.communicator = "winrm"
        # my custom box is using Administrator and vagrant does not exist
        msad01.winrm.username = windows_username
        # load Windows Administrator password from ENV
        msad01.winrm.password = "#{ENV['VAGRANT_WINRM_PASSWORD']}"
        # the box has only basic transport settings, no security
        msad01.winrm.transport = :plaintext
        msad01.winrm.basic_auth_only = true

        # set guest type
        msad01.vm.guest = :windows

        # hostname
        msad01.vm.hostname = "msad01.#{dns_domain}"

        # override provider settings
        msad01.vm.provider :libvirt do |box|

            # CPUs
            box.cpus = 4

            # Memory
            box.memory = 8192

        end # msad01.vm.provider :libvirt

    end # config.vm.define :msad01

    # CentOS 8 used as
    # - Oracle DB server
    config.vm.define :lxora01 do |lxora01|

        # local centos box
        lxora01.vm.box = linux_box

        # communicator settings
        # my custom box is using root and has not vagrant user
        lxora01.ssh.username = linux_username
        # don't insert a key as one was injected during box build
        lxora01.ssh.insert_key = false
        # use local SSH / GPG agent
        lxora01.ssh.keys_only = false

        # hostname
        lxora01.vm.hostname = "lxora01..#{dns_domain}"

        # override provider settings
        lxora01.vm.provider :libvirt do |box|

            # CPUs
            box.cpus = 2

            # Memory
            box.memory = 8192

        end # lxora01.vm.provider :libvirt

    end # config.vm.define :lxora01

end # Vagrant.configure
